import java.io.File;
import java.sql.*;
import java.sql.SQLException;
//import java.sql.Driver;
import java.io.FileNotFoundException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.Scanner;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

public class Test{
  public static String stringToBinary(String text){
    String bString="";
    String temp="";
    for(int i=0;i<text.length();i++){
      temp=Integer.toBinaryString(text.charAt(i));
      for(int j=temp.length();j<8;j++){
        temp="0"+temp;
      }
      bString+=temp+" ";
    }
    return bString;
  }

  public static String binaryToDecimal(String receivedBinary){  
    String eachChar[] = receivedBinary.split(" ");
    System.out.println("Binary To Decimal : The length is " + eachChar.length);
    String finalString = "";
    int decimal, i , j;
    for(String eachStr:eachChar){
      decimal = 0;
      for(i = eachStr.length() - 1, j = 0; i >=0; i --,j++){
        char tar = eachStr.charAt(i);
        if(tar == '1'){
          decimal += Math.pow(2, j);
        }
      }
      finalString += Integer.toString(decimal) + " ";
    }
    return finalString;
  }
  
  public static String decimalToDna(String uname,String pass, String dec) {
      Connection conn=null;
      PreparedStatement pst=null;
       try{           
       Class.forName("java.sql.Driver");  // MySQL database connection
       conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/DNA_TABLE", uname,pass);     
    String eachDec[] = dec.split(" ");
    String finalDecimal = " ";
    int i,j;
    String fin,tar1;
      j=eachDec.length;
      for(i = 0; i <j; i++){
      tar1 = eachDec[i];
      
     pst = conn.prepareStatement(" select * from authors where num= ?");
      
    pst.setString(1,String.valueOf(tar1));
      
      ResultSet rs = pst.executeQuery();
          
      
       while(rs.next()){
          
          fin=rs.getString("DNA_equivalent");
          
          finalDecimal+=fin+" ";
          
       }
     
       rs.close();
             
       }    
    
   return finalDecimal;
   }
       
   catch(Exception e){
       e.printStackTrace();
       return "error";
   }
   finally{
       try{
           if(pst!=null)
               conn.close();
           }
       catch(SQLException se)
       {
           //do nothing     
       }
       try{
           if(conn!=null)
               conn.close();
       }
       catch(SQLException se)
       {
           se.printStackTrace();
           
       }
   }
   }
public static String dnaToDecimal(String uname,String pass, String dna) {
      Connection conn=null;
      PreparedStatement pst=null;
       try{           
       Class.forName("java.sql.Driver");  // MySQL database connection
       conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/DNA_TABLE", uname,pass);     
    String eachDna[] = dna.split(" ");
    String finalDecimal = " ";
  
    int i,j,fin;
    String tar1;
    
      j=eachDna.length;
      for(i = 0; i <j; i++){
      tar1 = eachDna[i];
      
     pst = conn.prepareStatement(" select * from authors where DNA_equivalent= ?");
      
    pst.setString(1,String.valueOf(tar1));
      
      ResultSet rs = pst.executeQuery();
          
      
       while(rs.next()){
          
          fin=rs.getInt("num");
          finalDecimal+=fin+" ";
          
       }
     
       rs.close();
             
       }    
    
   return finalDecimal;
   }
       
   catch(Exception e){
       e.printStackTrace();
       return "error";
   }
   finally{
       try{
           if(pst!=null)
               conn.close();
           }
       catch(SQLException se)
       {
           //do nothing     
       }
       try{
           if(conn!=null)
               conn.close();
       }
       catch(SQLException se)
       {
           se.printStackTrace();
           
       }
   }
   }  
  
  public static String decimalToBinary(String receivedDecimal){  
    String eachChar[] = receivedDecimal.trim().split(" ");
    String finalString = "";
    String tempString;
     
    int decimal = 0,i,j,binary;
    for(String eachStr:eachChar){
       
      tempString = "";
      decimal = Integer.parseInt(eachStr);
        for(i = 0; i < 8; i ++){
        binary = decimal % 2;
        decimal /= 2;
        tempString += binary;
      }
      
      tempString = new StringBuilder(tempString).reverse().toString();
      finalString += tempString + " ";
     }
     return finalString;
  }  
  public static String BinaryToString(String receivedBinary){
    String[] code = receivedBinary.split(" ");
    String word="";
    for(int i=0;i<code.length;i++){
      word+= (char)Integer.parseInt(code[i],2);
    }
    //System.out.println(word);
    return word;
  }
 public static void main(String []args) throws FileNotFoundException 
{
   Connection conn = null;
   Statement stmt = null;
   int decimal = 0;  
   int i = 0;
   String word, receivedBinary, receivedDecimal, receivedDna;
   File file = new File("D:\\PL_PROJECT\\DNA\\input1.txt");
   Scanner sc = new Scanner(file);
             
   while(sc.hasNext()){
    word=sc.nextLine();
    System.out.println("The input is : "+ word);
    receivedBinary=stringToBinary(word);
    System.out.println("The Binary  Version is : "+ receivedBinary);
    receivedDecimal = binaryToDecimal(receivedBinary);
    System.out.println("The Decimal  Version is : "+ receivedDecimal);
    receivedDna= decimalToDna("root","Kallurtiappe10*",receivedDecimal);
    System.out.println("The DNA Version is :"+ receivedDna);
    
    System.out.println("Do you want to decrypt? 1/2: ");
    Scanner sc1=new Scanner(System.in);
    int s=sc1.nextInt();
    if(s==1)
    {
    receivedDecimal=dnaToDecimal("root","Kallurtiappe10*",receivedDna);
    System.out.println("The Decrypted Decimal Version is : "+ receivedDecimal);
    receivedBinary = decimalToBinary(receivedDecimal);
    System.out.println("The Decimal to binary " + receivedBinary);
    word = BinaryToString(receivedBinary);
    System.out.println("The Final text is " + word + "\n\n");
    
    BufferedWriter bw1 = null;
		FileWriter fw1 = null;

		try {

			String content1 = word;

			fw1 = new FileWriter(file);
			bw1 = new BufferedWriter(fw1);
			bw1.write(content1);

			System.out.println("Done");

		} catch (IOException e) {

			e.printStackTrace();

		}
                finally {

			try {

				if (bw1 != null)
					bw1.close();

				if (fw1 != null)
					fw1.close();

			} catch (IOException ex) {

				ex.printStackTrace();

			}

		}
    
  }
    else
    {
        BufferedWriter bw = null;
		FileWriter fw = null;

		try {

			String content = receivedDna;

			fw = new FileWriter(file);
			bw = new BufferedWriter(fw);
			bw.write(content);

			System.out.println("Done");

		} catch (IOException e) {

			e.printStackTrace();

		}
                finally {

			try {

				if (bw != null)
					bw.close();

				if (fw != null)
					fw.close();

			} catch (IOException ex) {

				ex.printStackTrace();

			}

		}
        System.out.println("Thank you for using!!");
        
    }
   }
}
}
 
